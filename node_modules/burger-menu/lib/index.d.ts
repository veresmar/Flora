/// <reference types="react" />
import './menu.scss';
export declare const slide: {
    (props: {
        isOpen: boolean;
        left?: boolean | undefined;
        width?: string | number | undefined;
        duration?: string | undefined;
        customCrossIcon?: import("react").ReactNode;
        customIcon?: import("react").ReactNode;
        onOpen: (e?: any) => void;
        onClose: (e?: any) => void;
        bodyClassName?: string | undefined;
        htmlClassName?: string | undefined;
        noOverlay?: boolean | undefined;
        overlayClassName?: string | undefined;
        children?: import("react").ReactNode;
        onClick: (data: {
            itemKey: string;
            domEvent: MouseEvent;
            text: string;
        }) => void;
        selectedKey?: string | undefined;
        className?: string | undefined;
    }): JSX.Element;
    defaultProps: {
        width: number;
        noOverlay: boolean;
        overlayClassName: string;
        onOpen: typeof import("./utils/noop").default;
        onClose: typeof import("./utils/noop").default;
        left: boolean;
        onClick: typeof import("./utils/noop").default;
    };
};
export declare const fallDown: {
    (props: {
        isOpen: boolean;
        left?: boolean | undefined;
        width?: string | number | undefined;
        duration?: string | undefined;
        customCrossIcon?: import("react").ReactNode;
        customIcon?: import("react").ReactNode;
        onOpen: (e?: any) => void;
        onClose: (e?: any) => void;
        bodyClassName?: string | undefined;
        htmlClassName?: string | undefined;
        noOverlay?: boolean | undefined;
        overlayClassName?: string | undefined;
        children?: import("react").ReactNode;
        onClick: (data: {
            itemKey: string;
            domEvent: MouseEvent;
            text: string;
        }) => void;
        selectedKey?: string | undefined;
        className?: string | undefined;
    }): JSX.Element;
    defaultProps: {
        width: number;
        noOverlay: boolean;
        overlayClassName: string;
        onOpen: typeof import("./utils/noop").default;
        onClose: typeof import("./utils/noop").default;
        left: boolean;
        onClick: typeof import("./utils/noop").default;
    };
};
export declare const SubMenu: {
    (props: {
        title: string;
        icon?: import("react").ReactNode;
        children: any;
        level: number;
        selectedKey?: string | undefined;
    }): JSX.Element;
    defaultProps: {};
};
export declare const Item: {
    (props: {
        text: string;
        icon?: import("react").ReactNode;
        itemKey: string;
        onClick: (e: any) => void;
        selectedKey?: string | undefined;
        level: number;
    }): JSX.Element;
    defaultProps: {
        onClick: typeof import("./utils/noop").default;
        icon: null;
        level: number;
    };
};
